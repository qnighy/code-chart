// This file is currently only for the reference of
// the internal chunk data, and is not actually used
// to generate any code.
//
// You need to manually update the corresponding
// code to reflect any changes to the protocol.

syntax = "proto3";

// An entry representing a Unicode character and its properties.
message CharacterData {
  // The Unicode code point.
  uint32 code_point = 1;

  // The declared name of the character, or an empty string
  // if the character's name or label is derived by rule.
  string name = 2;
  // How the name of the character is derived from its code point.
  NameDerivation name_derivation = 4;

  // The General_Category (Gc) property value.
  GeneralCategory general_category = 3;
}

// A value representing how the name of a character is derived
// from its code point, according to the rules in ยง4.8 Name.
enum NameDerivation {
  // No name derivation.
  NAME_DERIVATION_UNSPECIFIED = 0;
  // <control-NNNN> (label, not a name)
  NAME_DERIVATION_CONTROL = 1;
  // <reserved-XXXX> (label, not a name)
  NAME_DERIVATION_RESERVED = 2;
  // <noncharacter-XXXX> (label, not a name)
  NAME_DERIVATION_NONCHARACTER = 3;
  // <private-use-XXXX> (label, not a name)
  NAME_DERIVATION_PRIVATE_USE = 4;
  // <surrogate-XXXX> (label, not a name)
  NAME_DERIVATION_SURROGATE = 5;
  // HANGUL SYLLABLE ZZZZ (rule NR1)
  NAME_DERIVATION_HANGUL_SYLLABLE = 6;
  // CJK UNIFIED IDEOGRAPH-XXXX (rule NR2)
  NAME_DERIVATION_CJK_UNIFIED_IDEOGRAPH = 7;
  // CJK COMPATIBILITY IDEOGRAPH-XXXX (rule NR2)
  NAME_DERIVATION_CJK_COMPATIBILITY_IDEOGRAPH = 8;
  // EGYPTIAN HIEROGLYPH-XXXX (rule NR2)
  NAME_DERIVATION_EGYPTIAN_HIEROGLYPH = 9;
  // TANGUT IDEOGRAPH-XXXX (rule NR2)
  NAME_DERIVATION_TANGUT_IDEOGRAPH = 10;
  // NUSHU CHARACTER-XXXX (rule NR2)
  NAME_DERIVATION_NUSHU_CHARACTER = 11;
  // KHITAN SMALL SCRIPT CHARACTER-XXXX (rule NR2)
  NAME_DERIVATION_KHITAN_SMALL_SCRIPT_CHARACTER = 12;
}

// The General_Category (Gc) property value.
//
// https://www.unicode.org/reports/tr44/#General_Category_Values
enum GeneralCategory {
  GENERAL_CATEGORY_UNSPECIFIED = 0;
  // Uppercase_Letter (Lu)
  UPPERCASE_LETTER = 1;
  // Lowercase_Letter (Ll)
  LOWERCASE_LETTER = 2;
  // Titlecase_Letter (Lt)
  TITLECASE_LETTER = 3;
  // Modifier_Letter (Lm)
  MODIFIER_LETTER = 4;
  // Other_Letter (Lo)
  OTHER_LETTER = 5;
  // Nonspacing_Mark (Mn)
  NONSPACING_MARK = 6;
  // Spacing_Mark (Mc)
  SPACING_MARK = 7;
  // Enclosing_Mark (Me)
  ENCLOSING_MARK = 8;
  // Decimal_Number (Nd)
  DECIMAL_NUMBER = 9;
  // Letter_Number (Nl)
  LETTER_NUMBER = 10;
  // Other_Number (No)
  OTHER_NUMBER = 11;
  // Connector_Punctuation (Pc)
  CONNECTOR_PUNCTUATION = 12;
  // Dash_Punctuation (Pd)
  DASH_PUNCTUATION = 13;
  // Open_Punctuation (Pe)
  OPEN_PUNCTUATION = 14;
  // Close_Punctuation (Pf)
  CLOSE_PUNCTUATION = 15;
  // Initial_Punctuation (Pi)
  INITIAL_PUNCTUATION = 16;
  // Final_Punctuation (Pf)
  FINAL_PUNCTUATION = 17;
  // Other_Punctuation (Po)
  OTHER_PUNCTUATION = 18;
  // Math_Symbol (Sm)
  MATH_SYMBOL = 19;
  // Currency_Symbol (Sc)
  CURRENCY_SYMBOL = 20;
  // Modifier_Symbol (Sk)
  MODIFIER_SYMBOL = 21;
  // Other_Symbol (So)
  OTHER_SYMBOL = 22;
  // Space_Separator (Zs)
  SPACE_SEPARATOR = 23;
  // Line_Separator (Zl)
  LINE_SEPARATOR = 24;
  // Paragraph_Separator (Zp)
  PARAGRAPH_SEPARATOR = 25;
  // Control (Cc)
  CONTROL = 26;
  // Format (Cf)
  FORMAT = 27;
  // Surrogate (Cs)
  SURROGATE = 28;
  // Private_Use (Co)
  PRIVATE_USE = 29;
  // Unassigned (Cn)
  UNASSIGNED = 30;
}
